#!/bin/bash

# Script de correction des d√©pendances manquantes pour Alimante
# R√©sout les probl√®mes de modules Python manquants

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

print_status() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

echo -e "${BLUE}================================${NC}"
echo -e "${BLUE}  Correction des D√©pendances     ${NC}"
echo -e "${BLUE}================================${NC}"
echo ""

# Arr√™ter le service
print_status "Arr√™t du service alimante..."
sudo systemctl stop alimante

# V√©rifier que l'environnement virtuel existe
if [ ! -d "alimante_env" ]; then
    print_error "Environnement virtuel non trouv√©"
    print_status "Ex√©cutez d'abord install_raspberry.sh"
    exit 1
fi

# Activer l'environnement virtuel
print_status "Activation de l'environnement virtuel..."
source alimante_env/bin/activate

# V√©rifier les d√©pendances manquantes
print_status "V√©rification des d√©pendances manquantes..."

# Liste des modules critiques
CRITICAL_MODULES=("jwt" "fastapi" "uvicorn" "pydantic" "RPi.GPIO" "smbus2")
MISSING_MODULES=()

for module in "${CRITICAL_MODULES[@]}"; do
    if python -c "import $module" 2>/dev/null; then
        print_success "$module install√©"
    else
        print_warning "$module manquant"
        MISSING_MODULES+=("$module")
    fi
done

# Installer les d√©pendances manquantes
if [ ${#MISSING_MODULES[@]} -gt 0 ]; then
    print_status "Installation des modules manquants..."
    
    # Installer PyJWT sp√©cifiquement
    if [[ " ${MISSING_MODULES[@]} " =~ " jwt " ]]; then
        print_status "Installation de PyJWT..."
        pip install PyJWT
    fi
    
    # Installer toutes les d√©pendances depuis requirements.txt
    if [ -f "requirements.txt" ]; then
        print_status "Installation des d√©pendances depuis requirements.txt..."
        pip install -r requirements.txt --no-cache-dir
    else
        print_warning "requirements.txt non trouv√©, installation des d√©pendances de base..."
        pip install fastapi uvicorn pydantic PyJWT RPi.GPIO smbus2
    fi
else
    print_success "Toutes les d√©pendances critiques sont install√©es"
fi

# V√©rification finale
print_status "V√©rification finale des d√©pendances..."
ALL_GOOD=true

for module in "${CRITICAL_MODULES[@]}"; do
    if python -c "import $module" 2>/dev/null; then
        print_success "$module fonctionne correctement"
    else
        print_error "$module ne fonctionne toujours pas"
        ALL_GOOD=false
    fi
done

if [ "$ALL_GOOD" = true ]; then
    print_success "üéâ Toutes les d√©pendances sont maintenant install√©es !"
    
    # Red√©marrer le service
    print_status "Red√©marrage du service alimante..."
    sudo systemctl start alimante
    
    # V√©rifier le statut
    sleep 3
    if sudo systemctl is-active alimante >/dev/null 2>&1; then
        print_success "Service alimante d√©marr√© avec succ√®s !"
        print_status "V√©rifiez le statut : sudo systemctl status alimante"
        print_status "V√©rifiez les logs : sudo journalctl -u alimante -f"
    else
        print_warning "Service ne d√©marre toujours pas"
        print_status "V√©rifiez les logs : sudo journalctl -u alimante -f"
    fi
else
    print_error "‚ùå Certaines d√©pendances ne fonctionnent toujours pas"
    print_status "V√©rifiez l'installation manuellement"
fi

echo ""
print_status "üìö Pour plus d'aide :"
echo "   - V√©rifiez les logs : sudo journalctl -u alimante -f"
echo "   - Testez manuellement : python -c 'import jwt; print(\"JWT OK\")'"
echo "   - Consultez la documentation du projet"
